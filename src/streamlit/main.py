import streamlit as st



st.title("RAG4Rent")


st.image("files/cover.png", use_container_width=True)

text = "1) Основная почиташка  - Главная\n2) Главная прелесть - Чат-бот\n3) Визуализашка - Карта"
st.text_area("Что можно найти на этом streamlit-е?", text)

tab1, tab2 = st.tabs(["Почиташка", "Тут тоже что-то будет"])

with tab1:
    st.title("`Начало`")


    st.write("Бедные орги каждый год долго-долго выбирают дома на посвят( Мы решили,",
        "что так больше продолжаться не может: ~~отменяем посвят~~ делаем "
        "супер-пупер RAG систему с возможностью быстрого и удобного подбора "
        "релевантных объявлений! Как говорится «Лофты размыли ценность посвята», пора решать эту проблему!")





    st.write("""
### `Summary`

#### `Основная задача:`
Создание Retrieval-Augmented Generation (RAG) системы для поиска и подбора релевантных объявлений о домах для аренды, чтобы облегчить выбор места проведения мероприятий.

#### `Этапы разработки:`
1. **`Сбор данных:`**
   - Использовали сайт Циан, так как он предоставляет удобный формат для парсинга.
   - Разработали парсер, который собирает данные о домах с использованием BeautifulSoup и requests, а также обходит ограничения на частоту запросов.

2. **`Препроцессинг данных:`**
   - Данные были преобразованы в текстовые документы.
   - Применили SentenceTransformer модель (`intfloat/multilingual-e5-large-instruct`) для создания векторных эмбеддингов текстов.

3. **`Создание RAG-системы:`**
   - Построили векторный поиск с использованием FAISS для поиска релевантных текстов.
   - В качестве генеративной модели выбрали `qwen2:7b-instruct-q4_0`, квантизированную для оптимизации производительности.

4. **`Интеграция RAG в веб-сервис:`**
   - Создали интерфейс на Streamlit для взаимодействия с пользователем.
   - Добавили карту с адресами домов с помощью API Яндекс Геокодера.
   - Разработали мультимодельный подход, позволяющий выбирать модель в зависимости от запроса.

#### `Преимущества решения:`
- **Эффективность:** Использование векторных эмбеддингов и FAISS позволяет быстро находить релевантные результаты.
- **Доступность:** Легкая установка с квантизированными моделями, которые можно запускать даже на ноутбуке.
- **Интуитивный интерфейс:** Streamlit обеспечивает понятный и функциональный веб-сервис.
- **Гибкость:** Возможность переключаться между моделями и адаптировать решение под разные запросы.

#### `Дополнительно:`
- Решение включает Chain-of-Thought (CoT) и few-shot подходы в настройке модели для улучшения качества ответов.
- Все исходные коды доступны на [GitHub](https://github.com/Y1OV/rag4rent), а демо-версия доступна для тестирования на [веб-сервисе](http://83.143.66.61:27362/) (собственно на нём мы сейчас и находимся).
""")


    



with tab2:

        st.write('`Ведутся технические работы`')